ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = SBP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
labs(title = "Presión Arterial Sistólica por Consumo de Alcohol", x = "Consumo de Alcohol (0 = No, 1 = Sí)", y = "Presión Arterial Sistólica (SBP)") +
scale_fill_manual(values = c("purple", "red")) +
theme_minimal()
# Boxplot de SBP por categoría de consumo de alcohol
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = SBP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
labs(title = "Presión Arterial Sistólica por Consumo de Alcohol", x = "Consumo de Alcohol (0 = No, 1 = Sí)", y = "Presión Arterial Sistólica (SBP)") +
scale_fill_manual(values = c("purple", "red")) +
theme_minimal()
# Histograma de Gamma-GTP
ggplot(variables_principales, aes(x = gamma_GTP)) +
geom_histogram(binwidth = 10, fill = "purple", color = "red", alpha = 0.7) +
labs(title = "Distribución de Gamma-GTP", x = "Gamma-GTP", y = "Frecuencia") +
theme_minimal()
# Histograma de Gamma-GTP
ggplot(variables_principales, aes(x = gamma_GTP)) +
geom_histogram(binwidth = 10, fill = "purple", color = "black", alpha = 0.7) +
labs(title = "Distribución de Gamma-GTP", x = "Gamma-GTP", y = "Frecuencia") +
theme_minimal()
# Histograma de Gamma-GTP
ggplot(variables_principales, aes(x = gamma_GTP)) +
geom_histogram(binwidth = 5, fill = "purple", color = "black", alpha = 0.7) +
labs(title = "Distribución de Gamma-GTP", x = "Gamma-GTP", y = "Frecuencia") +
theme_minimal()
# Histograma de Gamma-GTP
ggplot(variables_principales, aes(x = gamma_GTP)) +
geom_histogram(binwidth = 50, fill = "purple", color = "black", alpha = 0.7) +
labs(title = "Distribución de Gamma-GTP", x = "Gamma-GTP", y = "Frecuencia") +
theme_minimal()
# Histograma de Gamma-GTP
ggplot(variables_principales, aes(x = gamma_GTP)) +
geom_histogram(binwidth = 20, fill = "purple", color = "black", alpha = 0.7) +
labs(title = "Distribución de Gamma-GTP", x = "Gamma-GTP", y = "Frecuencia") +
theme_minimal()
# Histograma de Gamma-GTP
ggplot(variables_principales, aes(x = gamma_GTP)) +
geom_histogram(binwidth = 20, fill = "purple", color = "black", alpha = 0.7, xlim = 250) +
labs(title = "Distribución de Gamma-GTP", x = "Gamma-GTP", y = "Frecuencia") +
theme_minimal()
# Histograma de Gamma-GTP
ggplot(variables_principales, aes(x = gamma_GTP)) +
geom_histogram(binwidth = 20, fill = "purple", color = "black", alpha = 0.7, xlim(c(0, 250)) +
labs(title = "Distribución de Gamma-GTP", x = "Gamma-GTP", y = "Frecuencia") +
theme_minimal()
# Histograma de Gamma-GTP
ggplot(variables_principales, aes(x = gamma_GTP)) +
geom_histogram(binwidth = 20, fill = "purple", color = "black", alpha = 0.7) +
labs(title = "Distribución de Gamma-GTP", x = "Gamma-GTP", y = "Frecuencia") +
theme_minimal()
ggplot(fumadores_50, aes(x = gamma_GTP, y = LDL_chole, color = as.factor(DRK_YN))) +
geom_point(alpha = 0.7) +
labs(title = "Relación entre Gamma-GTP y Colesterol LDL según Consumo de Alcohol",
x = "Gamma-GTP",
y = "Colesterol LDL (LDL_chole)",
color = "Consumo de Alcohol (0 = No, 1 = Sí)") +
scale_color_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "bottom")
ggplot(fumadores_50, aes(x = gamma_GTP, y = LDL_chole, color = as.factor(DRK_YN))) +
geom_point(alpha = 0.7, size = 3) +  # Ajusta la transparencia y el tamaño de los puntos
labs(title = "Relación entre Gamma-GTP y Colesterol LDL según Consumo de Alcohol",
x = "Gamma-GTP",
y = "Colesterol LDL (LDL_chole)",
color = "Consumo de Alcohol (0 = No, 1 = Sí)") +
scale_color_manual(values = c("red", "blue")) +  # Colores para las categorías de alcohol
theme_minimal() +
theme(legend.position = "bottom")
ggplot(fumadores_50, aes(x = gamma_GTP, y = LDL_chole, color = as.factor(DRK_YN))) +
geom_point(alpha = 0.7, size = 3) +  # Ajusta la transparencia y el tamaño de los puntos
labs(title = "Relación entre Gamma-GTP y Colesterol LDL según Consumo de Alcohol",
x = "Gamma-GTP",
y = "Colesterol LDL (LDL_chole)",
color = "Consumo de Alcohol (0 = No, 1 = Sí)") +
scale_color_manual(values = c("red", "purple")) +  # Colores para las categorías de alcohol
theme_minimal() +
theme(legend.position = "bottom")
# Box plot para Gamma-GTP según el consumo de alcohol
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
labs(title = "Distribución de Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
# Box plot para Colesterol LDL según el consumo de alcohol
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = LDL_chole, fill = as.factor(DRK_YN))) +
geom_boxplot() +
labs(title = "Distribución de Colesterol LDL según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Colesterol LDL (LDL_chole)") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
library(ggplot2)
# Box plot para Gamma-GTP según el consumo de alcohol con eje y hasta 250
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
labs(title = "Distribución de Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
# Box plot para Colesterol LDL según el consumo de alcohol con eje y hasta 250
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = LDL_chole, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
labs(title = "Distribución de Colesterol LDL según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Colesterol LDL (LDL_chole)") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
library(ggplot2)
# Box plot para Gamma-GTP según el consumo de alcohol con eje y hasta 250
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
labs(title = "Distribución de Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
# Box plot para Colesterol LDL según el consumo de alcohol con eje y hasta 250
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = LDL_chole, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
labs(title = "Distribución de Colesterol LDL según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Colesterol LDL (LDL_chole)") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
library(ggplot2)
library(dplyr)
# Calcular la media de gamma_GTP y LDL_chole para cada grupo de DRK_YN
media_gamma <- fumadores_50 %>%
group_by(DRK_YN) %>%
summarize(mean_gamma_GTP = mean(gamma_GTP, na.rm = TRUE))
media_LDL <- fumadores_50 %>%
group_by(DRK_YN) %>%
summarize(mean_LDL_chole = mean(LDL_chole, na.rm = TRUE))
# Box plot para Gamma-GTP según el consumo de alcohol con línea de tendencia
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
geom_line(data = media_gamma, aes(x = as.factor(DRK_YN), y = mean_gamma_GTP, group = 1), color = "darkblue", size = 1) +
geom_point(data = media_gamma, aes(x = as.factor(DRK_YN), y = mean_gamma_GTP), color = "darkblue", size = 3) +
labs(title = "Distribución de Gamma-GTP según Consumo de Alcohol con Línea de Tendencia",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
# Box plot para Colesterol LDL según el consumo de alcohol con línea de tendencia
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = LDL_chole, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
geom_line(data = media_LDL, aes(x = as.factor(DRK_YN), y = mean_LDL_chole, group = 1), color = "darkblue", size = 1) +
geom_point(data = media_LDL, aes(x = as.factor(DRK_YN), y = mean_LDL_chole), color = "darkblue", size = 3) +
labs(title = "Distribución de Colesterol LDL según Consumo de Alcohol con Línea de Tendencia",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Colesterol LDL (LDL_chole)") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
# Cargar la librería ggplot2
library(ggplot2)
# Crear el scatter plot
ggplot(fumadores_50, aes(x = gamma_GTP, y = LDL_chole, color = as.factor(DRK_YN))) +
geom_point(alpha = 0.7, size = 3) +  # Puntos con transparencia y tamaño ajustado
geom_smooth(method = "lm", se = FALSE, linetype = "dashed") +  # Líneas de regresión lineal por grupo
labs(
title = "Relación entre Gamma-GTP y Colesterol LDL según Consumo de Alcohol",
x = "Gamma-GTP",
y = "Colesterol LDL (LDL_chole)",
color = "Consumo de Alcohol\n(0 = No, 1 = Sí)"
) +
scale_color_manual(values = c("red", "blue")) +  # Colores personalizados para los grupos
theme_minimal() +  # Tema minimalista para una mejor estética
theme(
legend.position = "bottom",  # Posicionar la leyenda en la parte inferior
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")  # Centrar y estilizar el título
)
# Scatter plot para Colesterol LDL según el consumo de alcohol
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = LDL_chole, color = as.factor(DRK_YN))) +
geom_boxplot() +
geom_jitter(alpha = 0.3, color = "gray", width = 0.2) +  # Agrega puntos dispersos para ver la distribución
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Distribución de Colesterol LDL según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Colesterol LDL (LDL_chole)"
) +
scale_color_manual(values = c("#1f77b4", "#ff7f0e")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = LDL_chole, color = as.factor(DRK_YN))) +
geom_boxplot() +
geom_jitter(alpha = 0.3, color = "gray", width = 0.2) +  # Agrega puntos dispersos para ver la distribución
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Distribución de Colesterol LDL según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Colesterol LDL (LDL_chole)"
) +
scale_color_manual(values = c("#1f77b4", "#ff7f0e")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
library(ggplot2)
library(dplyr)
# Calcular la media de gamma_GTP y LDL_chole para cada grupo de DRK_YN
media_gamma <- fumadores_50 %>%
group_by(DRK_YN) %>%
summarize(mean_gamma_GTP = mean(gamma_GTP, na.rm = TRUE))
media_LDL <- fumadores_50 %>%
group_by(DRK_YN) %>%
summarize(mean_LDL_chole = mean(LDL_chole, na.rm = TRUE))
# Box plot para Gamma-GTP según el consumo de alcohol con línea de tendencia
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
geom_line(data = media_gamma, aes(x = as.factor(DRK_YN), y = mean_gamma_GTP, group = 1), color = "darkblue", size = 1) +
geom_point(data = media_gamma, aes(x = as.factor(DRK_YN), y = mean_gamma_GTP), color = "darkblue", size = 3) +
labs(title = "Distribución de Gamma-GTP según Consumo de Alcohol con Línea de Tendencia",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
# Box plot para Colesterol LDL según el consumo de alcohol con línea de tendencia
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = LDL_chole, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
geom_line(data = media_LDL, aes(x = as.factor(DRK_YN), y = mean_LDL_chole, group = 1), color = "darkblue", size = 1) +
geom_point(data = media_LDL, aes(x = as.factor(DRK_YN), y = mean_LDL_chole), color = "darkblue", size = 3) +
labs(title = "Distribución de Colesterol LDL según Consumo de Alcohol con Línea de Tendencia",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Colesterol LDL (LDL_chole)") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda ya que la variable está en el eje x
# Boxplot de SBP por categoría de consumo de alcohol
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = SBP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
labs(title = "Presión Arterial Sistólica por Consumo de Alcohol", x = "Consumo de Alcohol (0 = No, 1 = Sí)", y = "Presión Arterial Sistólica (SBP)") +
scale_fill_manual(values = c("purple", "red")) +
theme_minimal()
# Box plot para Gamma-GTP según el consumo de alcohol
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Distribución de Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Distribución de Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 100) +  # Ajustar el eje y
labs(
title = "Distribución de Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = SGOT_AST, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Distribución de SGOT/AST según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "SGOT/AST"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = SGOT_AST, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 100) +  # Ajustar el eje y
labs(
title = "Distribución de SGOT/AST según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "SGOT/AST"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = triglyceride, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Distribución de Triglicéridos según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Triglicéridos"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
# Calcular medias por grupo
mean_gamma_GTP <- fumadores_50 %>%
group_by(DRK_YN) %>%
summarise(mean_gamma_GTP = mean(gamma_GTP, na.rm = TRUE))
# Crear el box plot para Gamma-GTP con anotación de medias
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_jitter(width = 0.2, alpha = 0.6) +  # Añade puntos dispersos
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
geom_text(data = mean_gamma_GTP, aes(x = as.factor(DRK_YN), y = mean_gamma_GTP + 10, label = sprintf("Mean: %.1f", mean_gamma_GTP)), color = "black") +
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot() +
ylim(0, 100) +  # Ajustar el eje y
labs(
title = "Distribución de Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
# Crear el scatter plot para Gamma-GTP con línea de regresión
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, color = as.factor(DRK_YN))) +
geom_jitter(width = 0.2, alpha = 0.6) +  # Añade puntos dispersos
geom_smooth(method = "lm", aes(group = 1), color = "blue", se = FALSE) +  # Línea de regresión
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_color_manual(values = c("red", "purple")) +  # Colores personalizados
theme_minimal() +
theme(legend.position = "none")  # Elimina la leyenda
# Crear el scatter plot para Gamma-GTP con línea de regresión
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_jitter(width = 0.2, alpha = 0.6) +  # Añade puntos dispersos
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
# Crear el scatter plot para Gamma-GTP con línea de regresión
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
# Crear el scatter plot para Gamma-GTP con línea de regresión
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 100) +  # Ajustar el eje y
labs(
title = "Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = SGOT_AST, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_jitter(width = 0.2, alpha = 0.6) +  # Añade puntos dispersos
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "SGOT/AST según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "SGOT/AST"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = SGOT_AST, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "SGOT/AST según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "SGOT/AST"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = SGOT_AST, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 100) +  # Ajustar el eje y
labs(
title = "SGOT/AST según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "SGOT/AST"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
# Crear el scatter plot para Gamma-GTP con línea de regresión
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = gamma_GTP, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 50) +  # Ajustar el eje y
labs(
title = "Gamma-GTP según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Gamma-GTP"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = SGOT_AST, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 50) +  # Ajustar el eje y
labs(
title = "SGOT/AST según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "SGOT/AST"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = triglyceride, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_jitter(width = 0.2, alpha = 0.6) +  # Añade puntos dispersos
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Triglicéridos según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Triglicéridos"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = triglyceride, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 250) +  # Ajustar el eje y
labs(
title = "Triglicéridos según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Triglicéridos"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
ggplot(fumadores_50, aes(x = as.factor(DRK_YN), y = triglyceride, fill = as.factor(DRK_YN))) +
geom_boxplot(alpha = 0.5) +
geom_smooth(method = "lm", aes(group = 1, color = "Trend"), se = FALSE) +  # Línea de regresión
ylim(0, 50) +  # Ajustar el eje y
labs(
title = "Triglicéridos según Consumo de Alcohol",
x = "Consumo de Alcohol (0 = No, 1 = Sí)",
y = "Triglicéridos"
) +
scale_fill_manual(values = c("red", "purple")) +  # Colores personalizados
scale_color_manual(name = "Trend", values = c("blue")) +  # Color para la línea de tendencia
theme_minimal() +
theme(legend.position = "none")
